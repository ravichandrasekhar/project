<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="transportapi-process-test-suite.xml" />
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="2e38ef53-8af7-4356-bac4-c715a48da513" >
		<http:request-connection host="localhost" port="8081" />
	</http:request-config>
	<munit:test name="transportapi-process-test-suite-transportapi-process-mainTest" doc:id="a505b11f-bb3c-4b76-aaa0-0c1912c0e7b5" description="Test">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="transportapi-process-main" />
			<munit:enable-flow-source value="routesFlow" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="98106100-2d5f-4794-adb1-441a0a8d1761" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="80ef0a62-a89a-4611-9a5b-8c159b1657d5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="48c3330d-fab2-4d98-aa42-024276fb33c3" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b9da9f13-ba18-462a-bdc0-4f829f22596a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="e4662412-db11-4bb3-8652-2d2a2e64c89a" >
				<http:request method="GET" doc:name="Request" doc:id="914233b7-085e-4369-a742-af4cd009bff1" config-ref="HTTP_Request_configuration" path="/api/bookings/{transportType}/routes">
				<http:headers><![CDATA[#[output application/java
---
{
	"transactionId" : "1234556mm"
}]]]></http:headers>
				<http:uri-params><![CDATA[#[output application/java
---
{
	"transportType" : "land"
}]]]></http:uri-params>
			</http:request>
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="04c3a18f-819e-49ca-a84e-a9d621ccdcd3" >
						<logger level="INFO" doc:name="Logger" doc:id="b0d9f63a-1368-4636-932e-2ee3f3fec172" message="#[payload]"/>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="6e3ce472-dfa3-466a-a326-bd87ded2b7a2" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="transportapi-process-test-suite-transportapi-process-mainTest1" doc:id="189b53e9-4163-45a4-84b1-5c0ffa57b0e5" description="Test">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="transportapi-process-main" />
			<munit:enable-flow-source value="routesFlow" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="29ed78bd-0086-4bdc-a628-7fc130c692fc" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="80ef0a62-a89a-4611-9a5b-8c159b1657d5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="69dcbd7f-a93f-46cb-ab1b-a10c13dc8409" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b9da9f13-ba18-462a-bdc0-4f829f22596a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="7fde374e-44f7-4beb-b417-179c3ead2dea" >
				<http:request method="POST" doc:name="Request" doc:id="82f2920a-d959-4f9e-b50c-41cec2d9d3af" config-ref="HTTP_Request_configuration" path="/api/bookings/{transportType}/routes" >
					<http:headers ><![CDATA[#[output application/java
---
{
	"transactionId" : "1234556mm"
}]]]></http:headers>
					<http:uri-params ><![CDATA[#[output application/java
---
{
	"transportType" : "land"
}]]]></http:uri-params>
				</http:request>
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="307cf4de-250f-4256-b053-901d335d52fe" >
						<ee:transform doc:name="Transform Message" doc:id="29d46925-4b8c-442d-9cd9-09c1c323f9a6" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "Method Not allowed"
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="ff709ce1-efb8-42aa-bce5-4461e48b12b4" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="transportapi-process-test-suite-transportapi-process-mainTest2" doc:id="1a174463-0e59-45d1-8fc7-99800251e3c4" description="Test">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="transportapi-process-main" />
			<munit:enable-flow-source value="schudulesFlow" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="b2828961-5974-45f7-8607-b77ef898a939" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="642e908a-bb66-45fc-847c-2b0571449bd6" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="a21ec54b-1c74-4a42-8d7b-824d61ae462a" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b9da9f13-ba18-462a-bdc0-4f829f22596a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="ed0bc2a3-5552-4ddc-847d-007394ebe697" >
				<http:request method="GET" doc:name="Request" doc:id="7070624d-50dd-49ec-ad6e-3da6b1afae14" config-ref="HTTP_Request_configuration" path="/api/bookings/{transportType}/schudule" >
					<http:headers ><![CDATA[#[output application/java
---
{
	"transactionId" : "1234556mm"
}]]]></http:headers>
					<http:uri-params ><![CDATA[#[output application/java
---
{
	"transportType" : "land"
}]]]></http:uri-params>
					<http:query-params ><![CDATA[#[output application/java
---
{
	"departureLocationCode" : "HYD",
	"destinationLocationCode" : "BLR"
}]]]></http:query-params>
				</http:request>
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="9cdbe5f5-38dd-47bb-9b3b-60e22f02de53" >
						<logger level="INFO" doc:name="Logger" doc:id="8aa6fc5f-2c44-4a0a-a02c-acfc61233da7" message="#[payload]"/>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="233ce734-3a87-4507-b4be-6492fb9caa90" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="transportapi-process-test-suite-transportapi-process-mainTest3" doc:id="3cf0bbd1-1335-4ce6-8e8c-770222ea5163" description="Test">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="transportapi-process-main" />
			<munit:enable-flow-source value="routesFlow" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="0ad9b6cc-a73f-48e4-ae70-a5dbe8698157" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="80ef0a62-a89a-4611-9a5b-8c159b1657d5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="4600e217-cd36-43e8-9323-64d4285d6bb6" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b9da9f13-ba18-462a-bdc0-4f829f22596a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="bc83677c-3c81-4bba-992a-1c6d2770ba7f" >
				<http:request method="GET" doc:name="Request" doc:id="81eea178-ffac-4f82-afab-e86307abc736" config-ref="HTTP_Request_configuration" path="/api/bookings/{transportType}/routes1">
				<http:headers><![CDATA[#[output application/java
---
{
	"transactionId" : "1234556mm"
}]]]></http:headers>
				<http:uri-params><![CDATA[#[output application/java
---
{
	"transportType" : "land"
}]]]></http:uri-params>
			</http:request>
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="0428f434-bc2b-4254-a1bb-584b7e51f0d9" >
						<ee:transform doc:name="Transform Message" doc:id="5474bb72-ac31-47c0-bfc3-ed49c94e6f0c" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "Resource Not Found"
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="5947b65a-371e-403a-ad3c-aa93a606303d" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="transportapi-process-test-suite-transportapi-process-mainTest4" doc:id="dd9c09be-4e74-472b-bda0-4d6f34337377" description="Test">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="transportapi-process-main" />
			<munit:enable-flow-source value="routesFlow" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="18d21adf-7020-419c-bccc-a6bb560a95bb" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="80ef0a62-a89a-4611-9a5b-8c159b1657d5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="6de90240-2b55-4ad2-98c1-64d1ce104267" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b9da9f13-ba18-462a-bdc0-4f829f22596a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('response.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="fdc07461-6d79-41b0-b617-ee6318ed0460" >
				<http:request method="GET" doc:name="Request" doc:id="826724a7-350e-44a1-bece-0024a61f2ed2" config-ref="HTTP_Request_configuration" path="/api/bookings/{transportType}/routes">
				<http:uri-params><![CDATA[#[output application/java
---
{
	"transportType" : "land"
}]]]></http:uri-params>
			</http:request>
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="7c3ed8f3-4e21-4efa-bfc4-6a7831f0f607" >
						<ee:transform doc:name="Transform Message" doc:id="8b529d9c-ff28-403d-be0b-47e65c5e3fbc" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "Method Not Allowed"
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="7c6ee781-7fbc-472e-a6bd-436998171d2a" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>


</mule>
